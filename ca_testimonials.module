<?php

include_once('ca_testimonials.features.inc');

function ca_testimonials_init() {
  drupal_add_css(drupal_get_path('module', 'ca_testimonials') .'/ca_testimonials.css');
}

function ca_testimonials_menu() {
  $items = array();
  $items['testimonials/admin/sort'] = array(
    'title' => 'Sort Testimonials',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ca_testimonials_sort_testimonials'),
    'access arguments' => array('sort testimonials'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

function ca_testimonials_perm() {
  return array('sort testimonials');
}

function ca_testimonials_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'insert':
      db_query("INSERT INTO {ca_testimonials_weight} (nid, weight) VALUES (%d, 0)", $node->nid);
      break;
    case 'delete':
      db_query("DELETE FROM {ca_testimonials_weight} WHERE nid = %d", $node->nid);
      break;
  }
}

function ca_testimonials_sort_testimonials() {
  $query = db_query('SELECT n.*, wtw.weight FROM {node} n INNER JOIN {ca_testimonials_weight} wtw ON n.nid = wtw.nid WHERE n.type = "ca_testimonial" ORDER BY wtw.weight');
  $form = array();
  while ($result = db_fetch_object($query)) {
    $result = node_load($result->nid);
    $key = $result->nid;
    $form['info'][$key] = array(
      '#value' => $result->title,
    );
    $form['weight'][$key] = array(
      '#type' => 'weight',
      '#default_value' => $result->weight,
    );
  }
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save Sort'),
  );
  return $form;
}

function theme_ca_testimonials_sort_testimonials($form) {
  drupal_set_title('Sort Testimonials');
  $header = array(t('Testimonial'), t('Weight'));
  $rows = array();
  foreach (element_children($form['info']) as $id) {
    if (is_array($form['info'][$id])) {
      $form['weight'][$id]['#attributes']['class'] = 'ca-testimonials-weight';
      $rows[] = array(
        'data' => array(drupal_render($form['info'][$id]), drupal_render($form['weight'][$id])),
        'class' => 'draggable',
      );
    }
  }
  $output = theme('table', $header, $rows, array('id' => 'ca-testimonials-order-table'));
  $output .= drupal_render($form);
  
  drupal_add_tabledrag('ca-testimonials-order-table', 'order', 'sibling', 'ca-testimonials-weight', NULL, NULL, TRUE);
  
  return $output;
}

function ca_testimonials_sort_testimonials_submit($form, $form_state) {
  foreach ($form_state['values'] as $nid => $weight) {
    if (is_numeric($nid)) {
      db_query("UPDATE {ca_testimonials_weight} SET weight = %d WHERE nid = %d", $weight, $nid);
    }
  }
}

/**
 * Implementation of the hook_theme().
 */

function ca_testimonials_theme($existing, $type, $theme, $path) {
  return array(
    'ca_testimonials_sort_testimonials' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

function ca_testimonials_theme_registry_alter(&$theme_registry) {
  $theme_registry['node']['theme paths'][] = drupal_get_path('module', 'ca_testimonials') ."/themes";
}

/**
 * Implementation of hook_views_data()
 */

function ca_testimonials_views_data() {
  $data['ca_testimonials_weight']['table']['group'] = t('CA Testimonials Weight');
  
  $data['ca_testimonials_weight']['table']['join']['node'] = array(
    'left_field' => 'nid',
    'field' => 'nid',
  );
  $data['ca_testimonials_weight']['nid'] = array(
    'title' => t('Nid'),
    'help' => t('The node ID of the node.'),
    'relationship' => array(
      'title' => t('Node Weight'),
      'help' => t('Provides a relationship to the ca_testimonials_weight table.'),
      'handler' => 'views_handler_relationship',
      'base' => 'node',
      'field' => 'nid',
      'label' => t('node weight'),
    ),
  );
  $data['ca_testimonials_weight']['weight'] = array(
    'title' => t('Weight'),
    'help' => t('A ca_testimonials node\'s weight.'),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );
  return $data;
}
